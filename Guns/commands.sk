options:
    item: crossbow
    
on load:
    set {-properties::*} to "Effect", "ReloadType", "AmmoType", "FireSound", "Damage", "ReloadSpeed", "FireRate", "FireSound", "MaxAmmo", "Models.Idle", "Models.Reload", "Points.Military", "Points.Medic"
    reloadGuns()

function reloadGuns():
    # deleting past vars 
    delete {-Guns::*}
    # loading guns list
    load "plugins/Skript/scripts/Guns/guns.yml" as "guns.yml"
    loop yaml node keys "Guns" of "guns.yml":
        add loop-value to {_names::*}
    
    if {_names::*} is not set:
        warning("Guns is not defined!")
        stop 
    # Guns List
    loop {_names::*}:
        set {_name} to loop-value-1
        set {_item} to {@item}
        loop {-properties::*}:
            set {_prop} to loop-value-2
            if yaml value "Guns.%{_name}%.%{_prop}%" from "guns.yml" is not set:
                debug("%{_prop}% &fproperty in &6%{_name}% &fis not defined! &cStopping...")
                stop 
            else:
                set {_%{_prop}%} to yaml value "Guns.%{_name}%.%{_prop}%" from "guns.yml"
                if all:
                    skript type of {_%{_prop}%} is "number" or "integer"
                    {_prop} does not contain "Points" or "Models"
                    {_lore::*} does not contain "&f%{_prop}%&8: %ProgressBar({_%{_prop}%}, 10)%"
                then:
                    add "&f%{_prop}%&8: %ProgressBar({_%{_prop}%}, 10)%" to {_lore::*}

        # i didnt find a way to find type of var, so decided to set it manually
        set string tag "Effect" of nbt compound of {_item} to {_Effect}
        set string tag "ReloadType" of nbt compound of {_item} to {_ReloadType}
        set string tag "AmmoType" of nbt compound of {_item} to {_AmmoType}
        set string tag "FireSound" of nbt compound of {_item} to {_FireSound}

        set double tag "ReloadSpeed" of nbt compound of {_item} to {_ReloadSpeed}
        set double tag "FireRate" of nbt compound of {_item} to {_FireRate}
        set double tag "Dmg" of nbt compound of {_item} to {_Damage}

        set int tag "Ammo" of nbt compound of {_item} to 0
        set int tag "MaxAmmo" of nbt compound of {_item} to {_MaxAmmo}
        set int tag "Models.Idle" of nbt compound of {_item} to {_Models.Idle}
        set int tag "Models.Reload" of nbt compound of {_item} to {_Models.Reload}
        
        # make crossbow charged.
        set boolean tag "Charged" of nbt compound of {_item} to true

        set name of {_item} to "&f%{_name}%"
        set custom model data of {_item} to {_Models.Idle}


            
        set {-Guns::%{_name}%} to {_item} with lore {_lore::*}
        debug("Gun %{_name}% &aloaded!")


command /Guns [<string>]:
    permission: op 
    trigger:
        if {-Guns::%arg-1%} is not set:
            send "&cThere's no weapon with name: &f%arg-1%"
            stop 
        give {-Guns::%arg-1%} to player

